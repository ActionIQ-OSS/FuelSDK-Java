2014-08-29  Ian Murdock  <imurdock@exacttarget.com>

    * Released version 0.999999-pre1.0-1.

2014-04-17  Ian Murdock  <imurdock@exacttarget.com>

    * ETClient.java, ETConnection.java: Use the access token rather
    than the legacy token to authenticate with the SOAP API.
    * ETClient.java (getLegacyToken): Deprecated.

2014-04-16  Ian Murdock  <imurdock@exacttarget.com>

    * ETResponse.java: Changed from an interface to a class and
    moved implemention out of soap/ETResponseImpl.java and into
    ETResponse.java.
    * soap/ETResponseImpl.java: Deprecated.

2014-04-15  Ian Murdock  <imurdock@exacttarget.com>

    * ETClient.java (retrieveDataExtension): New method.
    (retrieveDataExtensions): New method.

    * ETDataExtension.java: Moved to top level directory.
    (getColumns): Renamed from getFields().
    (setColumns): Renamed from setFields().
    (addColumn): New method.
    (insert): New method.
    (select): New method.
    (update): New method.
    (delete): New method.
    (retrieveColumns): New method.

    * ETDataExtensionRow.java: Moved to top level directory.
    (getColumn): New method.
    (setColumn): New method.
    (getKeys): Deprecated in favor of getColumn() and setColumn().
    (getColumns): Likewise.
    (setKeys): Likewise.
    (setColumns): Likewise.

    * ETDataExtensionColumn.java: Moved to top level directory.
    * ETDataExtensionColumnType.java: Renamed from
    ETDataExtensionFieldType.java.
    (getColumnType): Replaces getFieldType().
    (setColumnType): Replaces setFieldType().
    * ETDataExtensionColumnType.java: Moved to top level directory.

    * ETDataExtensionService.java: Deprecated in favor of new way of
    interacting with data extensions.
    * ETDataExtensionServiceImpl.java: Likewise.
    * ETDataExtensionColumnService.java: Likewise.
    * ETDataExtensionColumnServiceImpl.java: Likewise.
    * ETDataExtensionRowService.java: Likewise.
    * ETDataExtensionRowServiceImpl.java: Likewise.

    * model/ETFolder.java: Change serializedName of the parentFolder
    field to ParentFolder.ID (from ParentFolder.ObjectID).
    (getParentFolderId): New method. Replaces getParentFolder().
    (getParentFolder): Deprecated.
    (setParentFolderId): New method. Replaces setParentFolder().
    (setParentFolder): Deprecated.

    * ETResponse.java: Don't constrain T to subtypes of ETObject
    (so we can return integers as the result of create requests).
    * soap/ETResponseImpl.java: Likewise.

    * soap/ETCrudServiceImpl.java (post): Return the ID of the newly
    created object(s) in response.getResults(). For example, you can
    now get the IDs of newly created folders with the following code
    snippet:

        ETResponse<Integer> response = service.post(client, folders);
        for (int id : response.getResults()) {
            System.out.println(id);
        }

2014-04-13  Ian Murdock  <imurdock@exacttarget.com>

    * model/converter/ObjectConverter.java: Moved into new directory for
    deprecated sources (src/main-deprecated/java/com/exacttarget/fuelsdk).

2014-03-29  Ian Murdock  <imurdock@exacttarget.com>

    * ETClient.java: Added new constructor that takes properties file.

2014-03-28  Ian Murdock  <imurdock@exacttarget.com>

    * Released version 0.999999.

2014-03-23  Ian Murdock  <imurdock@exacttarget.com>

    * ETSoapObject.java (getInternalProperty): New function.
    (getInternalProperties): Renamed from getProperties() and made static.
    (getField): Made private.
    (getAllFields): Made private.
    * soap/ETGetServiceImpl.java (get): Use new getInternalProperty()
    and getInternalProperties() methods.

2014-03-23  Ian Murdock  <imurdock@exacttarget.com>

    * Added support for partial object loading. Now, if you want to include
    only specific properties of the object(s) in the response, you can do
    that by specifying the property names as arguments to the get call, e.g.:

        ETResponse<ETList> response = service.get(client, "name",
                                                  "description");

    You can also use partial object loading when using filters:

        ETResponse<ETList> response = service.get(client, filter, "name",
                                                  "description");

    As before, if no properties are specified, all properties are
    loaded, e.g.:

        ETResponse<ETList> response = service.get(client);

    or

        ETResponse<ETList> response = service.get(client);

2014-03-21  Ian Murdock  <imurdock@exacttarget.com>

    * ETClient.java (refreshToken): Return the new access token.
    Update the SOAP header with the new legacy token.

    * ETRestConnection.java: Keep track of whether the connection is
    an auth connection (to avoid infinite loops).
    (sendRequest): Refresh the access token if necessary but only if
    this isn't an auth connection.

    * ETSoapConnection.java (updateHeaders): New method.

2014-03-20  Ian Murdock  <imurdock@exacttarget.com>

    * ETSoapObject.java: Removed legacy ClientID property.

    * model/ETClientID.java: Deleted.

    * soap/ETGetServiceImpl.java (get): Automatically refresh the
    OAuth token if necessary.
    * soap/ETCrudServiceImpl.java (post, patch, delete): Likewise.

2014-03-14  Ian Murdock  <imurdock@exacttarget.com>

    * ETSoapObject.java: Fixed bug related to object conversion of
    data extension rows.

    * model/ETDataExtensionColumn.java: Add "ID" to ignoredFields. The
    presence of this field was causing retrieves to return an error.

    * model/converter/ObjectConverter.java:
    Added (deprecated) ObjectConverter class that wraps toInternal()
    and fromInternal() ETSoapObject methods for backward compatibility
    with old convertFromEtObject() and convertToEtObject() methods.
